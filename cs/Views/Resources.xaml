<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:System="clr-namespace:System;assembly=mscorlib"
  x:Class="$safeprojectname$.Resources"
  xmlns:system="clr-namespace:System;assembly=mscorlib"
  xmlns:local="clr-namespace:$safeprojectname$"
    xmlns:sw="clr-namespace:WpfStyleableWindow.StyleableWindow"
    xmlns:prop="clr-namespace:$safeprojectname$">

    <!--The window template and it's components -->
    <sw:WindowCloseCommand x:Key="CloseCommand"></sw:WindowCloseCommand>
    <sw:WindowTitleCommand x:Key="TitleCommand"></sw:WindowTitleCommand>

    <!-- Backgorund Color-->
    <SolidColorBrush x:Key="WindowBackColor" 
                     Color="White"/>
    <!--Main Color-->
    <SolidColorBrush x:Key="WindowMainColor" 
                     Color="#0B94D6"/>
    <!--Secondary color-->
    <SolidColorBrush x:Key="WindowSecondaryColor" 
                     Color="Gray"/>

    <!--Control template for Main forms-->
    <ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type Window}">
        <Grid Background="Transparent">
            <Grid>

                <Border Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0 0 0 0" Background="{TemplateBinding Background}">
                    <Grid>
                        <AdornerDecorator>
                            <ContentPresenter x:Name="WindowContent"/>
                        </AdornerDecorator>
                    </Grid>
                </Border>

            </Grid>

            <!--Use only in case that the you want to allow the user to resize the window-->

            <!--<Thumb x:Name="ThumbTop" Height="6" Margin="14,0" VerticalAlignment="Top" Cursor="SizeNS"  Opacity="0" sw:WindowResizeBehavior.TopResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbTopLeft" Height="6" Width="6" VerticalAlignment="Top" HorizontalAlignment="Left" Cursor="SizeNWSE"  Opacity="0" sw:WindowResizeBehavior.TopLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbBottom" Height="6" Margin="14,0" VerticalAlignment="Bottom" Cursor="SizeNS" Opacity="0" sw:WindowResizeBehavior.BottomResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbTopRight" Height="6" Width="6" VerticalAlignment="Top" HorizontalAlignment="Right" Cursor="SizeNESW"  Opacity="0" sw:WindowResizeBehavior.TopRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbRight" HorizontalAlignment="Right" Margin="0,14" Width="6" Cursor="SizeWE"  Opacity="0" sw:WindowResizeBehavior.RightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbBottomRight" Height="6" Width="6" VerticalAlignment="Bottom" HorizontalAlignment="Right" Cursor="SizeNWSE"  Opacity="0" sw:WindowResizeBehavior.BottomRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbLeft" HorizontalAlignment="Left" Margin="0,14" Width="6" Cursor="SizeWE"  Opacity="0" sw:WindowResizeBehavior.LeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbBottomLeft" Height="6" Width="6" VerticalAlignment="Bottom" HorizontalAlignment="Left" Cursor="SizeNESW"  Opacity="0" sw:WindowResizeBehavior.BottomLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>-->

        </Grid>
    </ControlTemplate>

    <!--Custom windows style of the Main window-->
    <Style x:Key="CustomWindowStyle" 
           TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" 
                Value="None"/>
        <Setter Property="AllowsTransparency" 
                Value="True"/>
        <Setter Property="Background" 
                Value="Transparent"/>
        <!--Color of the borders-->
        <Setter Property="BorderBrush" 
                Value="Transparent"/>
        <Setter Property="BorderThickness" 
                Value="0"/>
        <Setter Property="Foreground" 
                Value="Transparent"/>
        <Setter Property="Template" 
                Value="{StaticResource WindowTemplate}"/>
        <Setter Property="ResizeMode" 
                Value="NoResize"/>

    </Style>

    <!--TitleLabels Custom template-->
    <ControlTemplate  x:Key="MainTextBoxTemplate" TargetType="TextBox">
        <Grid x:Name="root" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
            <!-- managing visual states to change controls styles on different states -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation BeginTime="00:00:00.000" 
                                             Duration="00:00:00.500"
                                             From="1" To="0"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="hoverBorder"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation BeginTime="00:00:00.000" 
                                             Duration="00:00:00.500"
                                             From="0" To="1"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="hoverBorder"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="Red" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="Red" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="ReadOnly">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="Red" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="Red" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.300"
                                             From="0" To="1"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="focusBorder"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused">
                        <Storyboard>
                            <DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.700"
                                             From="1" To="0"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="focusBorder"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <!-- main border, styling the border-brush and background for Normal state -->
            <Border x:Name="normalBorder" 
                    Background="White"
                    BorderBrush="{StaticResource WindowSecondaryColor}"
                    BorderThickness="0.8 0.8 0.8 1"
                    CornerRadius="3"/>

            <!-- styling border-brush and background-color for MouseOver state -->
            <Border x:Name="hoverBorder" Opacity="0"
                    BorderThickness="0.8 0.8 0.8 2"
                    CornerRadius="3">
                <Border.BorderBrush>
                    <SolidColorBrush Color="Gray"/>
                </Border.BorderBrush>
                <Border.Background>
                    <SolidColorBrush Color="White"/>
                </Border.Background>
            </Border>

            <!-- styling border-brush and background-color for Focused state -->
            <Border x:Name="focusBorder" 
                    Background="White"
                    BorderBrush="{StaticResource WindowSecondaryColor}"
                    BorderThickness="0.8 0.8 0.8 4"
                    CornerRadius="3"/>

            <!-- TextBox uses a ScrollViewer named PART_ContentHost as its content-presenter -->
            <ScrollViewer x:Name="PART_ContentHost"
                          Padding="{TemplateBinding Padding}"
                          BorderThickness="0" 
                          IsTabStop="False" 
                          Margin="2" 
                          Background="{x:Null}"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          TextElement.Foreground="{TemplateBinding Foreground}"/>

        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" 
                     Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#d4d4d4"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsReadOnly" 
                     Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#d4d4d4"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--TitleLabels Custom template-->
    <Style x:Key="MainTextBox" 
           TargetType="{x:Type TextBox}">
        <Setter Property="Template" 
                Value="{StaticResource MainTextBoxTemplate}"/>
        <Setter Property="FontFamily" 
                Value="Roboto"/>
        <Setter Property="FontSize" 
                Value="14px"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush 
                    Color="White"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush 
                    Color="Black"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" 
                Value="8 4"/>
        <Setter Property="HorizontalAlignment" 
                Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" 
                Value="Left"/>
        <Setter Property="VerticalAlignment" 
                Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" 
                Value="Center"/>
        <Setter Property="BorderThickness" 
                Value="1"/>
        <Setter Property="Height" 
                Value="28"/>
        <Setter Property="TextWrapping" 
                Value="Wrap"/>
        <Setter Property="Text" 
                Value="{x:Static prop:WPFProperties.TboxText}"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="Gray"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Version label custom template-->
    <ControlTemplate  x:Key="VersionLabelTemplate" TargetType="Label">
        <Border>
            <ContentPresenter HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"
                     Value="true">
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Customization of version label template-->
    <Style x:Key="VersionLabel" TargetType="{x:Type Label}">
        <Setter Property="Template" 
                Value="{StaticResource VersionLabelTemplate}"/>
        <Setter Property="FontFamily" 
                Value="Roboto"/>
        <Setter Property="FontSize" 
                Value="12px"/>
        <Setter Property="Foreground" 
                Value="Gray"/>
        <Setter Property="Height" 
                Value="14"/>
        <Setter Property="Width" 
                Value="38"/>
        <Setter Property="Content"
                Value="{x:Static prop:WPFProperties.ProjectVersion}"/>
    </Style>

    <!--MainButtons Custom template-->
    <ControlTemplate  x:Key="MainButtonStyleTemplate" TargetType="Button">
        <Border x:Name="border" 
                    CornerRadius="17" 
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" 
                    SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" 
                                  ContentTemplate="{TemplateBinding ContentTemplate}" 
                                  Content="{TemplateBinding Content}" 
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                  Focusable="False" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  Margin="{TemplateBinding Padding}" 
                                  RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="True">
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity"  TargetName="border" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity"  TargetName="border" Value="0.2"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Customization of MainButtons template-->
    <Style x:Key="MainButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template" 
                Value="{StaticResource MainButtonStyleTemplate}"/>
        <Setter Property="FontFamily" 
                Value="Roboto"/>
        <Setter Property="FontSize" 
                Value="14px"/>
        <Setter Property="Foreground" 
                Value="White"/>
        <Setter Property="BorderThickness" 
                Value="0"/>
        <Setter Property="Background" 
                Value="{StaticResource WindowMainColor}"/>
        <Setter Property="ToolTipService.ShowDuration" 
                Value="2000"/>
        <Setter Property="ToolTipService.InitialShowDelay" 
                Value="1500"/>
        <Setter Property="Height"  
                Value="30"/>
        <Setter Property="Width"  
                Value="177"/>
        <Setter Property="ToolTip"
                Value="{x:Static prop:WPFProperties.MnButtonToolTip}"/>
        <Setter Property="Content"
                Value="{x:Static prop:WPFProperties.MnButtonText}"/>
        <Setter Property="Button.Effect">
            <Setter.Value>
                <DropShadowEffect 
                    Color="Black" 
                    Direction="320"
                    ShadowDepth="3.6" 
                    BlurRadius="3" 
                    Opacity="0.25" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--Close Button Custom template-->
    <ControlTemplate  x:Key="CloseButtonStyleTemplate" TargetType="Button">
        <Border x:Name="border" 
                    CornerRadius="3" 
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" 
                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                              Content="{TemplateBinding Content}" 
                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                              Focusable="False" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              Margin="{TemplateBinding Padding}" 
                              RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="True">
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity"  TargetName="border" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity"  TargetName="border" Value="0.2"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Customization of Close Buttons template-->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template" Value="{
            StaticResource CloseButtonStyleTemplate}"/>
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Command" Value="{StaticResource CloseCommand}"/>
        <Setter Property="CommandParameter" Value="{
            Binding RelativeSource={RelativeSource 
            Mode=FindAncestor, 
            AncestorType={x:Type Window}}}"/>
        <Setter Property="Foreground" 
                Value="Black"/>
        <Setter Property="BorderThickness" 
                Value="0"/>
        <Setter Property="Background" 
                Value="Transparent"/>
        <Setter Property="ToolTipService.ShowDuration" 
                Value="2000"/>
        <Setter Property="ToolTipService.InitialShowDelay" 
                Value="1500"/>
        <Setter Property="Height"  
                Value="21"/>
        <Setter Property="ToolTip"
                Value="{x:Static prop:WPFProperties.clsButtonToolTip}"/>
    </Style>

    <!--Title Custom template-->
    <ControlTemplate  x:Key="TitleButtonStyleTemplate" TargetType="Button">
        <Border x:Name="border" 
                    CornerRadius="3" 
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" 
                    SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" 
                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                              Content="{TemplateBinding Content}" 
                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                              Focusable="False" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              Margin="{TemplateBinding Padding}" 
                              RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="True">
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity"  TargetName="border" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity"  TargetName="border" Value="0.2"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Customization of Title template-->
    <Style x:Key="TitleButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template" Value="{
            StaticResource CloseButtonStyleTemplate}"/>
        <Setter Property="FontFamily" 
                Value="Roboto"/>
        <Setter Property="FontSize" 
                Value="20px"/>
        <Setter Property="FontWeight" 
                Value="Bold"/>
        <Setter Property="Command" 
                Value="{StaticResource TitleCommand}"/>
        <Setter Property="CommandParameter" 
                Value="{
            Binding RelativeSource={RelativeSource 
            Mode=FindAncestor, 
            AncestorType={x:Type Window}}}"/>
        <Setter Property="Foreground" 
                Value="Black"/>
        <Setter Property="BorderThickness" 
                Value="0"/>
        <Setter Property="Background" 
                Value="Transparent"/>
        <Setter Property="ToolTipService.ShowDuration" 
                Value="2000"/>
        <Setter Property="ToolTipService.InitialShowDelay" 
                Value="1500"/>
        <Setter Property="Height"  
                Value="26"/>
        <Setter Property="ToolTip"
                Value="{x:Static prop:WPFProperties.TtlButtonToolTip}"/>
    </Style>

    <!--Settings Custom template-->
    <ControlTemplate  x:Key="SettingsButtonStyleTemplate" TargetType="Button">
        <Border x:Name="border" 
                    CornerRadius="3" 
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid>
                <Image
                                            x:Name="buttonImage"
                                            Source="Resources/Settings.png"
                                            Stretch="UniformToFill" />
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="True">
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity"  TargetName="border" Value="0.5"/>
                <Setter TargetName="buttonImage" Property="Source" Value="Resources/Settings.png" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity"  TargetName="border" Value="0.2"/>

            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Customization of SettingsButton template-->
    <Style x:Key="SettingsButtonStyle" 
           TargetType="{x:Type Button}">
        <Setter Property="Template" 
                Value="{StaticResource SettingsButtonStyleTemplate}"/>
        <Setter Property="FontFamily" 
                Value="Roboto"/>
        <Setter Property="FontSize" 
                Value="12px"/>
        <Setter Property="Foreground" 
                Value="White"/>
        <Setter Property="BorderThickness" 
                Value="0"/>
        <Setter Property="Background" 
                Value="{StaticResource WindowButtonColor}"/>
        <Setter Property="ToolTipService.ShowDuration" 
                Value="2000"/>
        <Setter Property="ToolTipService.InitialShowDelay" 
                Value="1500"/>
        <Setter Property="Height"  
                Value="38"/>
    </Style>

    <!--SecondaryButtons Custom template-->
    <ControlTemplate  x:Key="SecondaryButtonStyleTemplate" TargetType="Button">
        <Border x:Name="border" 
                    CornerRadius="3" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" 
                    SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" 
                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                              Content="{TemplateBinding Content}" 
                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                              Focusable="False" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              Margin="{TemplateBinding Padding}" 
                              RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" 
                     Value="True">
            </Trigger>
            <Trigger Property="IsMouseOver" 
                     Value="True">
                <Setter Property="Background" 
                        TargetName="border" 
                        Value="LightGray"/>
            </Trigger>
            <Trigger Property="IsPressed" 
                     Value="True">
                <Setter Property="Background" 
                        TargetName="border" 
                        Value="{StaticResource WindowSecondaryColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Customization of SecondaryButtons template-->
    <Style x:Key="SecondaryButtonStyle" 
           TargetType="{x:Type Button}">
        <Setter Property="Template" 
                Value="{StaticResource SecondaryButtonStyleTemplate}"/>
        <Setter Property="FontFamily" 
                Value="Roboto"/>
        <Setter Property="FontSize" 
                Value="14px"/>
        <Setter Property="Foreground" 
                Value="Black"/>
        <Setter Property="BorderThickness" 
                Value="0.55"/>
        <Setter Property="BorderBrush" 
                Value="{StaticResource WindowSecondaryColor}"/>
        <Setter Property="Background" 
                Value="White"/>
        <Setter Property="ToolTipService.ShowDuration" 
                Value="2000"/>
        <Setter Property="ToolTipService.InitialShowDelay" 
                Value="1500"/>
        <Setter Property="Height" 
                Value="28"/>
        <Setter Property="ToolTip"
                Value="{x:Static prop:WPFProperties.ScdttonToolTip}"/>
        <Setter Property="Content"
                Value="{x:Static prop:WPFProperties.ScdButtonText}"/>
    </Style>

    <!--Customization of MainBorder template-->
    <Style x:Key="MainBorderTemplate" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" 
                Value="1,1,1,1"/>
        <Setter Property="CornerRadius" 
                Value="5,5,5,5"/>
        <Setter Property="BorderBrush" 
                Value="Transparent"/>
        <Setter Property="Background" 
                Value="{StaticResource WindowBackColor}"/>
        <Setter Property="Border.Effect">
            <Setter.Value>
                <DropShadowEffect 
                    Color="Gray" 
                    Direction="0"
                    ShadowDepth="0" 
                    BlurRadius="20" 
                    Opacity="0.3" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--Apple Style side bars-->
    <Style x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Fill="Transparent" />
                        <Border x:Name="CornerScrollBarRectangle"
                            CornerRadius="5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="2,1,-2,1"
                            Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag"
                                Value="Horizontal">
                            <Setter TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
                            <Setter TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled"
            Value="false" />
        <Setter Property="Foreground"
            Value="#ADABAB" />
        <Setter Property="Background"
            Value="Transparent" />
        <Setter Property="Width"
            Value="7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot"
                        Width="7"
                        Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Track x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp"
                                            Command="ScrollBar.PageDownCommand"
                                            Opacity="0"
                                            Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown"
                                            Command="ScrollBar.PageUpCommand"
                                            Opacity="0"
                                            Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb"
                                Property="IsMouseOver"
                                Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb"
                                Property="IsDragging"
                                Value="true">
                            <Setter Value="{DynamicResource DarkBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                        </Trigger>

                        <Trigger Property="IsEnabled"
                                Value="false">
                            <Setter TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation"
                                Value="Horizontal">
                            <Setter TargetName="GridRoot"
                                Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track"
                                Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width"
                                Value="Auto" />
                            <Setter Property="Height"
                                Value="8" />
                            <Setter TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
                            <Setter TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox Customization-->
    <Style x:Key="ComboBoxTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" 
                Value="Roboto"/>
        <Setter Property="Foreground" 
                Value="LightGray"/>
        <Setter Property="VerticalAlignment" 
                Value="Center"/>
        <Setter Property="Height" 
                Value="28"/>
        <Setter Property="FontSize" 
                Value="14px"/>
        <Setter Property="Cursor" 
                Value="Arrow"/>
        <Setter Property="Focusable" 
                Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="TextBorder"
                            CornerRadius="3,0,0,3"
                            BorderThickness="0.8,0.8,0,0.8"
                            Background="White"
                            BorderBrush="Gray">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="gd">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border" 
                                SnapsToDevicePixels="True" 
                                Grid.ColumnSpan="2" 
                                Background="White" 
                                BorderBrush="Gray" 
                                BorderThickness="0,0.8,0.8,0.8" 
                                CornerRadius="0 5 5 0"/>
                        <Border x:Name="Boredr1" 
                                SnapsToDevicePixels="True" 
                                Grid.Column="1"  
                                Margin="1" 
                                Background="White" 
                                BorderBrush="White" 
                                BorderThickness="0,0.8,0.8,0.8" 
                                CornerRadius="5,5,5,5"/>
                        <Path x:Name="Arrow" 
                              SnapsToDevicePixels="True" 
                              Grid.Column="1" 
                              Fill="#7A7A7A" 
                              HorizontalAlignment="Center" 
                              VerticalAlignment="Center" 
                              Data="M 0 0 L 6 6 L 12 0 Z" />
                        <ContentPresenter Grid.Column="0" TextElement.Foreground="Orange"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="Data" Value="M 0 6 L 12 6 L 6 0 Z"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="gd" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition MaxWidth="18"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Name="PART_EditableTextBox"
                             Style="{StaticResource ComboBoxTextBoxStyle}"
                             Padding="10 4 0 0"
                             Height="{TemplateBinding Height}"/>
                        <ToggleButton Grid.Column="1" Margin="-3 0 0 0"
                            Height="{TemplateBinding Height}"
                            Style="{StaticResource ComboBoxButtonStyle}"
                            Focusable="False"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            Margin="5,0,0,0"/>
                        <Popup Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                SnapsToDevicePixels="True"                
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Margin="5,0,5,5">
                                <Border 
                                    x:Name="DropDownBorder"
                                    BorderThickness="1"
                                    CornerRadius="5"
                                    Background="White"
                                    BorderBrush="White">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="5" 
                                                          Color="Gray" 
                                                          Opacity="0.8" 
                                                          ShadowDepth="0"
                                                          Direction="0"/>
                                    </Border.Effect>
                                </Border>
                                <ScrollViewer Margin="4,6,4,6" 
                                              SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" 
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="gd" >
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ComboBoxItem.IsMouseOver" 
                                 Value="True">
                            <Setter TargetName="gd"  
                                    Property="Background" 
                                    Value="LightGray"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary> 